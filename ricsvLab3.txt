In RISC implement:
a) Read array, takes param(N), reads numbers until 0 is input and stores them continuosly in memory, starting with location N

b) Print array, takes 2 params(N = starting position, M = array length) and outputs M numbers starting at position N as hex.

c) minmax: Takes (N, M); returns min and max value of array starting at N

d) Print value: Recieves 1 param, outputs param test with c

e) Duplicate array: Params (N, M, K); Duplicates array of length M starting at N into K (K = starting position in memory), elimnating min and max values

f) Factorial: Params (N); calculates factorial(N) recursively through stack; returns factorial(N)


//
for procedures:
JMS <label> -> jump to subroutine start
RET -> return from procedure

//
a, b, c params & return value on registers
d, e, f params & return value on stack

        INP R0, 2
        MOV R7, R0
        JMS readArr
        JMS printArr
        HLT
readArr INP R1, 2
        CMP R1, #0
        BEQ rdLpEnd
        STR R1, 0(R0)
        ADD R0, #1
        BRA readArr
rdLpEnd MOV R6, R0
        SUB R6, R6, R7
        RET
printArr MOV R0, R7
        MOV R2, R6
prLp    LDR R1, 0(R0)
        OUT R1, 6
        ADD R0, #1
        SUB R2, #1
        CMP R2, #0
        BNE prLp
        RET
minmax  MOV R0, R7
        MOV R2, R6
        LDR R5, 0(R0)
        MOV R6, R5
        ADD R0, #1
mmLoop  SUB R6, #1
        CMP R6, #0
        BEQ mmEnd
mmEnd   RET



